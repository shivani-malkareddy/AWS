{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a vpc with 6 subnets",
    "Parameters": {
        "vpccidr": {
            "Description": "This is cidr range of vpc",
            "Type": "String",
            "Default": "192.168.0.0/16"
        },
        "subnetcidrs": {
            "Description": "This is cidr ranges of subnets",
            "Type": "CommaDelimitedList",
            "Default": "192.168.0.0/24,192.168.1.0/24,192.168.2.0/24,192.168.3.0/24,192.168.4.0/24,192.168.5.0/24"
        },
        "zone1": {
            "Description": "This is zone 1 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        },
        "zone2": {
            "Description": "This is zone 2 for 3 subnets",
            "Type": "AWS::EC2::AvailabilityZone::Name"
        }
    },
    "Resources": {
        "ntiervpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "vpccidr"
                },
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ntier"
                    }
                ]
            }
        },
        "web1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "web2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        1,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "web2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "app1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        2,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "app2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        3,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "app2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone2"
                }
            }
        },
        "db1subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        4,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db1"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": {
                    "Ref": "zone1"
                }
            }
        },
        "db2subnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "CidrBlock": {
                    "Fn::Select": [
                        5,
                        {
                            "Ref": "subnetcidrs"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "db2"
                    }
                ],
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "AvailabilityZone": "us-east-1b"
            }
        },
        "webserverSG": {
            "Description": "this is web server Security group",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow http,https,ssh from anywhere",
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "SecurityGroupIngress": [
                    {
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "ToPort": 80
                    },
                    {
                        "FromPort": 443,
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "ToPort": 443
                    },
                    {
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "CidrIp": "0.0.0.0/0",
                        "ToPort": 22
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "websg"
                    }
                ]
            }
        },
        "appserverSG": {
            "Description": "this is app server Security group",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow ssh,8080 from vpccidr",
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "SecurityGroupIngress": [
                    {
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "ToPort": 22
                    },
                    {
                        "FromPort": 8080,
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "ToPort": 8080
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "appsg"
                    }
                ]
            }
        },
        "dbserverSG": {
            "Description": "this is DB server Security group",
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow 3306 from vpccdir",
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "SecurityGroupIngress": [
                    {
                        "FromPort": 3306,
                        "IpProtocol": "tcp",
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "ToPort": 3306
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "dbsg"
                    }
                ]
            }
        },
        "IGW": {
            "Description": "ntier IGW",
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "IGW"
                    }
                ]
            }
        },
        "IGWattach": {
            "Description": "attach the IGW to the vpc",
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "IGW"
                },
                "VpcId": {
                    "Ref": "ntiervpc"
                }
            }
        },
        "publicRT": {
            "Description": "public RT",
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "publicRT"
                    }
                ]
            }
        },
        "publicroute": {
            "Description": "public route via IGW",
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "publicRT"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                }
            }
        },
        "privateRT": {
            "Description": "private RT",
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "ntiervpc"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "privateRT"
                    }
                ]
            }
        },
        "publicrtweb1assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web1subnet"
                },
                "RouteTableId": {
                    "Ref": "publicRT"
                }
            }
        },
        "publicrtweb2assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "web2subnet"
                },
                "RouteTableId": {
                    "Ref": "publicRT"
                }
            }
        },
        "privatertapp1assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "app1subnet"
                },
                "RouteTableId": {
                    "Ref": "privateRT"
                }
            }
        },
        "privatertapp2assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "app2subnet"
                },
                "RouteTableId": {
                    "Ref": "privateRT"
                }
            }
        },
        "privatertdb1assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db1subnet"
                },
                "RouteTableId": {
                    "Ref": "privateRT"
                }
            }
        },
        "privatertdb2assoc": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "db2subnet"
                },
                "RouteTableId": {
                    "Ref": "privateRT"
                }
            }
        },
        "dbsubnetgroup": {
            "Description": "ntier dbsubnetgroup",
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "dbsubnetgroup",
                "SubnetIds": [
                    {
                        "Ref": "db1subnet"
                    },
                    {
                        "Ref": "db2subnet"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "DBsubnetgroup"
                    }
                ]
            }
        },
        
        "rddbinstance": {
          "Type": "AWS::RDS::DBInstance",
          "Properties": {
            "AllocatedStorage": 20,
            "DBInstanceClass": "db.t2.micro",
            "AllowMajorVersionUpgrade": true,
            "AutoMinorVersionUpgrade": true,
            "AvailabilityZone": "us-east-1a",
            "BackupRetentionPeriod": 10,
            "DBInstanceIdentifier": "ntierdbinstance",
            "DBName": "mysqlntierdb",
            "DBSubnetGroupName": 
            { "Ref": "dbsubnetgroup" }
            ,
            "Engine": "mysql",
            "EngineVersion": "8.0.30",
            "LicenseModel": "general-public-license",
            "MasterUsername": "mysqluser1",
            "MasterUserPassword": "password",
            "PubliclyAccessible": true,
            "Tags":[
            { "Key": "name", "Value":  "DBinstance ntier" }
            ],
            "VPCSecurityGroups" : [ 
            { "Ref": "dbserverSG" }
             ]
          }
        }
        
    }
}